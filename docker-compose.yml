version: "3.8"
services:
    mongodb-server:
        container_name: mongodb-server
        image: mongo:latest
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PWD}
            MONGO_INITDB_DATABASE: ${DB_NAME}
            DB_AUTH_USER: ${DB_AUTH_USER}
            DB_AUTH_PWD: ${DB_AUTH_PWD}
            DB_USER: ${DB_USER}
            DB_PWD: ${DB_PWD}
            ADMIN_USER: ${ADMIN_USER}
            ADMIN_EMAIL: ${ADMIN_EMAIL}
            ADMIN_PWD: ${ADMIN_PWD}
        ports:
             # You can log into the database from the host machine
            - ${DB_PORT}:${DB_PORT}
        volumes:
            # Database information is stored here
            - mongodb:/data/db
            # Volume for mongo-init script (runs only first time compose is started)
            - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
        logging:
            # Disable mongodb logging
            driver: none
    client-server:
        container_name: client-server
        build: ./client-server
    auth-server:
        container_name: auth-server
        depends_on: 
            - mongodb-server
        build:
            context: .
            dockerfile: ./auth-server/Dockerfile

        environment:
            - DB_GATEWAY=${DB_GATEWAY}
            - DB_PROTOCOL=${DB_PROTOCOL}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_AUTH_USER}
            - DB_PWD=${DB_AUTH_PWD}
            - PORT=${AUTH_SERVER_PORT}
            - HASHING_SECRET=${HASHING_SECRET}
            - EVENTS_TO_LOG=${AUTH_SERVER_EVENTS}
            - ERRORS_TO_LOG=${AUTH_SERVER_ERRORS}
            - TRACEBACKS_TO_LOG=${AUTH_SERVER_TRACEBACKS}
            - PUBLIC_HOST=${PUBLIC_HOST}
            - PUBLIC_PORT=${PUBLIC_PORT}
        command:
            # Starting auth server with optional flags
            - node
            - ${AUTH_SERVER_FLAGS}
            - "./index.js"
        ports:
            # Exposing node debug port (only accessable when --inspect=0.0.0.0 is passed to auth server)
            - 9229:9229
        links:
            - mongodb-server:mongodb
    resource-server:
        container_name: resourece-server
        depends_on: 
            - mongodb-server
            - auth-server
        build:
            context: .
            dockerfile: ./resource-server/Dockerfile
        environment:
            - DB_GATEWAY=${DB_GATEWAY}
            - DB_PROTOCOL=${DB_PROTOCOL}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PWD=${DB_PWD}
            - PORT=${RESOURCE_SERVER_PORT}
            - EVENTS_TO_LOG=${RESOURCE_SERVER_EVENTS}
            - ERRORS_TO_LOG=${RESOURCE_SERVER_ERRORS}
            - TRACEBACKS_TO_LOG=${RESOURCE_SERVER_TRACEBACKS}
            - CART_TIMEOUT=${CART_TIMEOUT}
            - PUBLIC_HOST=${PUBLIC_HOST}
            - PUBLIC_PORT=${PUBLIC_PORT}
        ports:
            # Exposing node debug port (only accessable when --inspect=0.0.0.0 is passed to resource server)
            # Note that host port is 9228 and NOT 9229 since it is allready in use by auth server.
            - 9228:9229
        command:
            - node
            - ${RESOURCE_SERVER_FLAGS}
            - "./index.js"
        links:
            - mongodb-server:mongodb
        volumes:
            # Mount usercontent folder for resourse server to store files
            - ./nginx-server/usercontent:/usr/src/app/usercontent
    nginx:
        restart: always
        build:
            context: ./nginx-server
        links:
            - auth-server:auth
            - resource-server:resource
            - client-server:frontend
        ports:
            # The public available ports on the host machine
            - "80:80"
            - "443:443"
        volumes:
            # Mount usercontent volume for static userfiles
            - ./nginx-server/usercontent:/www/usercontent
        logging:
            # Disable nginx logging
            driver: none
volumes:
    mongodb:
    